/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastrovendas;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author lucasabbade
 */
public class InterfaceCadastro extends javax.swing.JFrame
{
    DAO dao = new DAO();
    
    ArrayList<Object> vendedores = new ArrayList<>();
    ArrayList<Object> vendas = new ArrayList<>();
    
    DefaultListModel<String> vendedoresModel = new DefaultListModel<>();
    DefaultListModel<String> vendasModel = new DefaultListModel<>();

    /**
     * Creates new form InterfaceCadastro
     */
    public InterfaceCadastro()
    {
        initComponents();
        vendedoresModel.removeAllElements();
        vendasModel.removeAllElements();
        vendedoresList.setModel(vendedoresModel);
        vendasList.setModel(vendasModel);
        try {
            retrieveDataFromDB();
        } catch (SQLException ex) {
            System.out.println("Erro com o banco de dados: " + ex);
        }
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vendedoresList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vendasList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        criarVendedorButton = new javax.swing.JButton();
        criarVendaButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        vendedoresList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        vendedoresList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(vendedoresList);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Vendedores:");

        vendasList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(vendasList);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Vendas:");

        criarVendedorButton.setText("Criar Vendedor");
        criarVendedorButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                criarVendedorButtonActionPerformed(evt);
            }
        });

        criarVendaButton.setText("Criar Venda");
        criarVendaButton.setToolTipText("");
        criarVendaButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                criarVendaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(criarVendedorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addComponent(criarVendaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(criarVendedorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(criarVendaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void criarVendedorButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_criarVendedorButtonActionPerformed
    {//GEN-HEADEREND:event_criarVendedorButtonActionPerformed
        vendedores.add(criarVendedor());
        refresh();
    }//GEN-LAST:event_criarVendedorButtonActionPerformed

    private void criarVendaButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_criarVendaButtonActionPerformed
    {//GEN-HEADEREND:event_criarVendaButtonActionPerformed
        vendas.add(criarVenda());
        refresh();
    }//GEN-LAST:event_criarVendaButtonActionPerformed

    private void refresh() {
        repopulateListModel(vendedoresModel, vendedores);
        repopulateListModel(vendasModel, vendas);
    }
    
    private void retrieveDataFromDB() throws SQLException {
        dao.connect("curso");
        ArrayList<Vendedor> vendedoresAux = dao.findVendedores();
        ArrayList<Venda> vendasAux = dao.findVendas();
        vendedores.clear();
        vendas.clear();
        
        for (int i = 0; i < vendedoresAux.size(); i++) {
            vendedores.add((Object)vendedoresAux.get(i));
        }
        for (int i = 0; i < vendasAux.size(); i++) {
            vendas.add((Object)vendasAux.get(i));
        }
        
        dao.close();
    }
    
    private void repopulateListModel(DefaultListModel<String> model, ArrayList<Object> source){
        model.clear();
        
        for (int i = 0; i < source.size(); i++){
            model.addElement(source.get(i).toString());
        }
    }
    
    public Vendedor criarVendedor() {
        String nome = JOptionPane.showInputDialog("Digite o nome do vendedor");
        Vendedor v = new Vendedor(nome);
        try {
            dao.connect("curso");
            dao.insert(v);
            dao.close();
        } catch (SQLException ex) {
            System.out.println("Erro no banco de dados: " + ex);
        }
        
        return v;
    }
    
    public Venda criarVenda() {
        int id = Integer.parseInt(JOptionPane.showInputDialog("Qual o ID do vendedor? "));
        int produtoVendido = Integer.parseInt(JOptionPane.showInputDialog("Qual produto foi vendido (1 - resistor ou 2 - capacitor)? "));
        int quantidade = Integer.parseInt(JOptionPane.showInputDialog("Qual a quantidade vendida?"));
        Produto p;
        
        if (produtoVendido == 1) {
            p = new Resistor(2.50, "1K", 10);       // so pra exemplo
        } else {
            p = new Capacitor(0.10, 1000, 0.1);
        }
        
        Venda v = new Venda(id, p, quantidade);
        try {
            dao.connect("curso");
            dao.insert(v);
            dao.close();
        } catch (SQLException ex) {
            System.out.println("Erro no banco de dados: " + ex);
        }
        
        return v;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {   
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(InterfaceCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new InterfaceCadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton criarVendaButton;
    private javax.swing.JButton criarVendedorButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> vendasList;
    private javax.swing.JList<String> vendedoresList;
    // End of variables declaration//GEN-END:variables
}
